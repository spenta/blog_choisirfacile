<?PHP 
/* WARNING: This script is protected. Any attempt to reverse engineer, debug or de-code this file or its dependent files is strictly prohibited */
$codelock_file="funcs.php"; $codelock_frun=''; $codelock_fixpath=''; $codelock_filed=dirname(__FILE__); $codelock_lock=""; include($codelock_filed."/codelock.php");?>
